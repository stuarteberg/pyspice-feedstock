{% set name = "PySpice" %}
{% set version = "1.4.3b1" %}
#{% set sha256 = "" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  #url: https://github.com/FabriceSalvaire/PySpice/archive/v{{ version }}.tar.gz
  #sha256: {{ sha256 }}

  # Quick test for 1.4.3, even though there's no tag yet.
  #git_url: https://github.com/FabriceSalvaire/PySpice
  # git_rev: 9f0846bf60e481945ad29ba0be294f2d69a2af10
  #git_rev: b6c03df0079746b1d494dfef4234f7fddc0b9291

  # Test with a throw-away tag on Stuart's fork so we can use a tarball instead of git.
  # Maybe this will resolve the bizarre unicode problems on Mac in PR-17
  url: https://github.com/stuarteberg/PySpice/archive/v{{ version }}.tar.gz

build:
  number: 0
  script:
    # Note: On Windows, pip handles console_scripts in a strange way, so we can't use it.
    #- {{ PYTHON }} -m pip install . -vv
    - {{ PYTHON }} setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - pip
  run:
    - python
    - pyyaml >=5.3
    - cffi >=1.14
    - numpy >=1.18
    - scipy >=1.4
    - matplotlib-base >=3.1
    - ply >=3.11
    - ngspice-lib >=32  # ???

test:
  imports:
    - PySpice
    - PySpice.Config
    - PySpice.Doc
    - PySpice.Logging
    - PySpice.Math
    - PySpice.Physics
    - PySpice.Plot
    - PySpice.Probe
    - PySpice.Spice
    - PySpice.Tools
    - PySpice.Unit
  requires:
    - pytest
    - requests  # required ???
    # - pyterate >=2.1.5
    - pint
  source_files:
    - examples
    - unit-test
  commands:
    - python -c "import PySpice; print(PySpice.__version__)"
    - pytest unit-test
    - pyspice-post-installation --check-install
    # ngspice complains: Note: can't find init file
    # examples/operational-amplifier/astable.py FAILS
    # Error: circuit not parsed
    - conda install --yes -c fabricesalvaire pyterate
    - PySpiceLibraryPath=$PWD/examples/libraries pyterate --config=./examples/Settings.py --only-run  # [unix]
    - setx PySpiceLibraryPath %SRC_DIR%\examples\libraries  # [win]
    - pyterate --config=%SRC_DIR%\examples\Settings.py --only-run  # [win]

about:
  home: https://pyspice.fabrice-salvaire.fr
  doc_url: https://pyspice.fabrice-salvaire.fr
  dev_url: https://github.com/FabriceSalvaire/PySpice

  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE.txt

  summary: Simulate electronic circuit using Python and the Ngspice / Xyce simulators
  description: |
    PySpice is a free and open source Python module which interfaces Python to
    the Ngspice and Xyce circuit simulators. PySpice implements a Ngspice
    binding and provides an oriented object API on top of SPICE, the simulation
    output is converted to Numpy arrays for convenience.

extra:
  recipe-maintainers:
    - FabriceSalvaire
    - stuarteberg
